{
  "swagger": "2.0",
  "info": {
    "title": "TDW17 User REST api",
    "description": "[UPM] TDW17 User REST api operations",
    "version": "0.1.0"
  },
  "host": "localhost:8081",
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Returns TDW Users api token",
        "description": "Returns TDW Users api token.",
        "operationId": "tdw_post_login",
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Email",
            "allowEmptyValue": false,
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "User password",
            "allowEmptyValue": false,
            "required": true,
            "type": "string",
            "format": "password"
          }
        ],
        "responses": {
          "200": {
            "description": "TDW Users api token",
            "schema": {
              "type": "object",
              "example": {
                "X-Token": "<JSON web token>"
              }
            },
            "headers": {
              "X-Token": {
                "description": "api token",
                "type": "string"
              }
            }
          },
          "404": {
            "$ref": "#/responses/404_Resource_Not_Found_Response"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns all users",
        "description": "Returns all users from the system that the user has access to.",
        "operationId": "tdw_cget_users",
        "responses": {
          "200": {
            "description": "User array response",
            "schema": {
              "$ref": "#/definitions/UsersArray"
            }
          },
          "401": {
            "$ref": "#/responses/401_Standard_Response"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden_Response"
          },
          "404": {
            "$ref": "#/responses/404_Resource_Not_Found_Response"
          }
        },
        "security": [
          {
            "ResultsSecurity": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates a new user",
        "description": "Creates a new user",
        "operationId": "tdw_post_users",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "`User` properties to add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "`Created` User created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "`Bad Request` Username or email already exists.",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "401": {
            "$ref": "#/responses/401_Standard_Response"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden_Response"
          },
          "422": {
            "description": "`Unprocessable entity` Username, e-mail or password is left out",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        },
        "security": [
          {
            "ResultsSecurity": []
          }
        ]
      },
      "options": {
        "tags": [
          "Users"
        ],
        "summary": "Provides the list of HTTP supported methods",
        "description": "Return a `Allow` header with a list of HTTP supported methods.",
        "operationId": "tdw_options_users",
        "responses": {
          "200": {
            "description": "`Allow` header <Response body is empty>"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a user based on a single ID",
        "description": "Returns the user identified by `userId`.",
        "operationId": "tdw_get_users",
        "parameters": [
          {
            "$ref": "#/parameters/userId"
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "$ref": "#/responses/401_Standard_Response"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden_Response"
          },
          "404": {
            "$ref": "#/responses/404_Resource_Not_Found_Response"
          }
        },
        "security": [
          {
            "ResultsSecurity": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates a user",
        "description": "Updates the user identified by `userId`.",
        "operationId": "tdw_put_users",
        "parameters": [
          {
            "$ref": "#/parameters/userId"
          },
          {
            "name": "data",
            "in": "body",
            "description": "`User` data to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserData"
            }
          }
        ],
        "responses": {
          "209": {
            "description": "`Content Returned` User previously existed and is now updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "`Bad Request` User name or e-mail already exists",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "401": {
            "$ref": "#/responses/401_Standard_Response"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden_Response"
          },
          "404": {
            "$ref": "#/responses/404_Resource_Not_Found_Response"
          }
        },
        "security": [
          {
            "ResultsSecurity": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deletes a user",
        "description": "Deletes the user identified by `userId`.",
        "operationId": "tdw_delete_users",
        "parameters": [
          {
            "$ref": "#/parameters/userId"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted <Response body is empty>"
          },
          "401": {
            "$ref": "#/responses/401_Standard_Response"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden_Response"
          },
          "404": {
            "$ref": "#/responses/404_Resource_Not_Found_Response"
          }
        },
        "security": [
          {
            "ResultsSecurity": []
          }
        ]
      },
      "options": {
        "tags": [
          "Users"
        ],
        "summary": "Provides the list of HTTP supported methods",
        "description": "Return a `Allow` header with a list of HTTP supported methods.",
        "operationId": "tdw_options_users_id",
        "parameters": [
          {
            "$ref": "#/parameters/userId"
          }
        ],
        "responses": {
          "200": {
            "description": "`Allow` header <Response body is empty>"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "id",
        "nombreUsuario",
        "email"
      ],
      "properties": {
        "id": {
          "description": "User Id",
          "type": "integer",
          "format": "int32"
        },
        "nombreUsuario": {
          "description": "User name",
          "type": "string"
        },
        "email": {
          "description": "User email",
          "type": "string"
        },
        "habilitado": {
          "description": "Denotes if user is enabled",
          "type": "boolean"
        },
        "esAdmin": {
          "description": "Denotes if user has admin privileges",
          "type": "boolean"
        }
      },
      "example": {
        "id": 1508,
        "username": "User name",
        "email": "User email",
        "enabled": true,
        "admin": false
      }
    },
    "UserData": {
      "properties": {
        "nombreUsuario": {
          "description": "User name",
          "type": "string"
        },
        "email": {
          "description": "User email",
          "type": "string"
        },
        "password": {
          "description": "User password",
          "type": "string",
          "format": "password"
        },
        "habilitado": {
          "description": "Denotes if user is enabled",
          "type": "boolean"
        },
        "esAdmin": {
          "description": "Denotes if user has admin privileges",
          "type": "boolean"
        }
      },
      "example": {
        "nombreUsuario": "User_name",
        "email": "User_email@example.com",
        "password": "User_password",
        "habilitado": true,
        "esAdmin": false
      }
    },
    "UsersArray": {
      "properties": {
        "users": {
          "description": "Users array",
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "Message": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Response code",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "Response message",
          "type": "string"
        }
      },
      "example": {
        "code": "HTTP code",
        "message": "Response Message"
      }
    }
  },
  "parameters": {
    "userId": {
      "name": "userId",
      "in": "path",
      "description": "ID of user",
      "required": true,
      "type": "integer",
      "format": "int32"
    }
  },
  "responses": {
    "401_Standard_Response": {
      "description": "`Unauthorized` invalid `X-Token` header",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "403_Forbidden_Response": {
      "description": "`Forbidden` You don't have permission to access",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "404_Resource_Not_Found_Response": {
      "description": "`Not found` resource not found",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    }
  },
  "securityDefinitions": {
    "ResultsSecurity": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "login",
      "description": "user login"
    },
    {
      "name": "Users",
      "description": "User management"
    }
  ]
}